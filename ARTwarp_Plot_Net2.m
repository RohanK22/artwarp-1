function ARTwarp_Plot_Net2

global NET DATA

% Load Menu Options - This can be made into a function to prevent code
% repetition
h0 = findobj('Tag','ARTwarp');
clf
h1 = uimenu('Parent',h0, ...
    'Label','File', ...
    'Tag','uimenu1');
h2 = uimenu('Parent',h1, ...
    'Callback','ARTwarp_Load_Data', ...
    'Accelerator','o', ...
    'Label','Load Frequency Contours', ...
    'Tag','Fileuimenu1');
h2 = uimenu('Parent',h1, ...
    'Callback','ARTwarp_Load_Net', ...
    'Accelerator','n', ...
    'Label','Load Categorisation', ...
    'Tag','Fileuimenu2');
h1 = uimenu('Parent',h0, ...
    'Label','Analyse', ...
    'Tag','uimenu1');
h2 = uimenu('Parent',h1, ...
    'Callback','ARTwarp_Get_Parameters', ...
    'Accelerator','r', ...
    'Label','Run Categorisation', ...
    'Enable','on', ...
    'Tag','Runmenu');
h2 = uimenu('Parent',h1, ...
    'Callback','ARTwarp_Plot_Net', ...
    'Accelerator','p', ...
    'Label','Plot Categorisation', ...
    'Enable','on', ...
    'Tag','Plotmenu');

% MATLAB does not have scrollbars making this a lot harder

% Make a tabgroup
% Create a tab for every category
% When clicked on one category display contours belonging to that category
% p = uipanel(h0,'Position',[20 20 196 135]);
tabgp = uitabgroup(h0,'Position',[.03 .03 .94 .94]);

% Make scrolable sub panel for reference contours
% Under the panel for reference contours make another horizontally
% scrollable panel for the data contours

[Xmax x] = size(NET.weight);
Ymax = max(max(NET.weight));
numCols = round(NET.numCategories)-1;
numRows = 1;
numContours = length(DATA);
for category = 1:NET.numCategories
    numRows = max([numRows length(find([DATA.category]==category))]);
end
numRows = numRows+1;
rowHeight = (0.98 - 0.01*numRows)/numRows;
colWidth = (0.98 - 0.01*numCols)/(numCols+1);

referenceContours = []


for counter1 = 1:NET.numCategories
    tab = uitab(tabgp, ...
                'Title', ['Category ' num2str(counter1)]);
    p = uipanel(tab, 'Title','Main Panel','FontSize',12,...
             'BackgroundColor','white',...
             'Position',[.25 .1 .67 .67]);
         
    h1 = axes('Parent', p, ...
        'Units','normalized', ...
        'CameraUpVector',[0 1 0], ...
        'CameraUpVectorMode','manual', ...
        'Visible', 'on', ...
        'XLim', [0 Xmax], ...
        'YLim', [0 Ymax], ...
        'XTick',[], ...
        'YTick',[], ...
        'ButtonDownFcn', 'disp(''Hi'')');
    h2 = text('Parent',h1, ...
        'Units','normalized', ...
        'FontSize',9, ...
        'HorizontalAlignment','center', ...
        'Position',[0.5 1], ...
        'String',['Category ' num2str(counter1)], ...
        'VerticalAlignment', 'cap', ...
        'Visible', 'on');   
        h3 = line('Parent', h1, 'Color','r', 'Tag', ['P' num2str(counter1)], 'XData', 1:NET.numFeatures, 'YData', NET.weight(:,counter1));
end



% Display Reference Contours
%    disp('Reference Contours:')
% for counter1 = 1:NET.numCategories
% %     disp(sprintf('Category %s:',num2str(counter1)));
% %     data = find(NET.weight(:,1)>0); 
% %     disp(sprintf('%6.1f',NET.weight(data,1)'));
%     h1 = axes('Parent',h0, ...
%         'Units','normalized', ...
%         'CameraUpVector',[0 1 0], ...
%         'CameraUpVectorMode','manual', ...
%         'Visible', 'on', ...
%         'XLim', [0 Xmax], ...
%         'YLim', [0 Ymax], ...
%         'XTick',[], ...
%         'YTick',[]);
%     h2 = text('Parent',h1, ...
%         'Units','normalized', ...
%         'FontSize',9, ...
%         'HorizontalAlignment','center', ...
%         'Position',[0.5 1], ...
%         'String',['Category ' num2str(counter1)], ...
%         'VerticalAlignment', 'cap', ...
%         'Visible', 'on');   
%         h3 = line('Parent', h1, 'Color','r', 'Tag', ['P' num2str(counter1)], 'XData', 1:NET.numFeatures, 'YData', NET.weight(:,counter1));
%     referenceContours = [referenceContours h1]
% end
% 
% % referenceContours = [referenceContours referenceContours]
% align(referenceContours,'fixed', 10, 'middle');
% 
% rowCounter = ones(1,NET.numCategories)*(numRows-1);
% disp(sprintf('Contour \t Category \t Match'));
% for counter2 = 1:numContours
%     category = DATA(counter2).category;
%     disp(sprintf('%s \t %1i \t %6.3f',DATA(counter2).name,category,DATA(counter2).match));
%        h1 = axes('Parent',h0, ...
%         'Units','normalized', ...
%         'CameraUpVector',[0 1 0], ...
%         'CameraUpVectorMode','manual', ...
%         'Position',[(colWidth+0.01)*(category-1) + 0.01 (rowHeight+0.01)*(rowCounter(category)-1) + 0.01 colWidth rowHeight], ...
%         'Visible', 'on', ...
%         'XLim', [0 Xmax], ...
%         'YLim', [0 Ymax], ...
%         'XTick',[], ...
%         'YTick',[]);
%     h2 = text('Parent',h1, ...
%         'Units','normalized', ...
%         'FontSize',9, ...
%         'HorizontalAlignment','center', ...
%         'Position',[0.5 1], ...
%         'String',DATA(counter2).name, ...
%         'VerticalAlignment', 'cap', ...
%         'Visible', 'on');   
%     h3 = line('Parent', h1, 'Color','k', 'Tag', ['P' num2str(counter1)], 'XData', 1:length(DATA(counter2).contour), 'YData', DATA(counter2).contour);
%     rowCounter(category) = rowCounter(category)-1;
% end 